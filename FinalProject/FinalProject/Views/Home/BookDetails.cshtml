@using FinalProject.Models.EntityFramework
@using System.Globalization;
@using System.Diagnostics;
@model FinalProject.Models.EntityFramework.BOOK

@{
    ViewBag.Title = "Browse Inventory";
}

@{
    HENRY_DATABASEEntities database = new HENRY_DATABASEEntities();

    string title = Model.TITLE;
    TextInfo textInfo = new CultureInfo("en-US", false).TextInfo;
    title = textInfo.ToTitleCase(title);

    string imgSource = "/Content/Images/" + Model.BOOK_CODE + "/large.jpg";

    string isPaperback = "Not Avalible";
    if (Model.PAPERBACK.Equals("1"))
    {
        isPaperback = "Avalible";
    }

    //Getting the Inventory

    var allInventory = database.INVENTORies.ToList();

    var selectedInventories = allInventory.Where(i => i.BOOK_CODE.Equals(Model.BOOK_CODE));

    //Getting the Branches
    var allBranches = database.BRANCHes.ToList();

    var selectedBranches = new List<BRANCH>();


    //Create and populate a dictionary with the branch names as keys and the inventory amount as values
    Dictionary<int, int?> BranchInvDict = new Dictionary<int, int?>();

    foreach(INVENTORY inv in selectedInventories)
    {
        BranchInvDict.Add(inv.BRANCH_NUM, inv.ON_HAND);

        foreach(BRANCH branch in allBranches)
        {
            if(branch.BRANCH_NUM.Equals(inv.BRANCH_NUM))
            {
                selectedBranches.Add(branch);
            }
        }
    }
    //getting the WROTE
    var allWrotes = database.WROTEs.ToList();

    var selectedWrote = allWrotes.Where(w => w.BOOK_CODE.Equals(Model.BOOK_CODE)).First();

    //getting the author
    string authorName = "";

    var allAuthors = database.AUTHORs.ToList();

    var selectedAuthor = allAuthors.Where(a => a.AUTHOR_NUM.Equals(selectedWrote.AUTHOR_NUM)).First();

    authorName = selectedAuthor.AUTHOR_FIRST + " " + selectedAuthor.AUTHOR_LAST;

    //getting the publisher
    string publisherName = "";

    var allPublishers = database.PUBLISHERs.ToList();

    var selectedPublisher = allPublishers.Where(p => p.PUBLISHER_CODE.Equals(Model.PUBLISHER_CODE));

    publisherName = selectedPublisher.First().PUBLISHER_NAME;

}

<h2>Book Details</h2>

<div class="container-fluid">
    <div class="row">
        <!-- Side Navbar -->
        <div class="col-md-2">
            @Html.Partial("~/Views/Shared/_Navbar.cshtml")
        </div>

        <!-- Main Content -->
        <div class="col-md-9">
            <div class="row">
                <div class="col-md-6">
                    <img class="detail-img" src="@imgSource" />
                </div>
                <div class="col-md-4">
                    <table class="book-info">
                        <tr>
                            <th>Title</th>
                            <th>@title</th>
                        </tr>

                        <tr>
                            <th>Type</th>
                            <th>@Model.TYPE</th>
                        </tr>

                        <tr>
                            <th>Price</th>
                            <th>@string.Format("{0:C}", Model.PRICE)</th>
                        </tr>

                        <tr>
                            <th>Paperback</th>
                            <th>@isPaperback</th>
                        </tr>

                        <tr>
                            <th>Publisher</th>
                            <th>
                                <a href="@Url.Action("BrowseByPublisherPost", "Home", new { selectedPublisher = selectedPublisher.First().PUBLISHER_CODE })">
                                    @publisherName
                                </a>
                            </th>
                        </tr>

                        <tr>
                            <th>Book Code</th>
                            <th>@Model.BOOK_CODE</th>
                        </tr>

                        <tr>
                            <th>Author</th>
                            <th>
                                <a href="@Url.Action("BrowseByAuthorPost", "Home", new { selectedAuthor = selectedAuthor.AUTHOR_NUM})">
                                    @authorName
                                </a>
                            </th>
                        </tr>
                    </table>

                    <br />
                    <h3>Inventory By Location</h3>
                    <table class="book-info">
                        <tr>
                            <th>Location</th>
                            <th>On Hand Quantity</th>
                        </tr>

                        @foreach (BRANCH branch in selectedBranches)
                        {
                            <tr>
                                <th>
                                    <a href="@Url.Action("BrowseByLocationPost", "Home", new { selectedLocation = branch.BRANCH_NUM } )">
                                        @branch.BRANCH_NAME
                                    </a>
                                </th>
                                <th>
                                    @BranchInvDict[branch.BRANCH_NUM]
                                </th>
                            </tr>
                        }

                    </table>
                </div>
            </div>

        </div>

    </div>
</div>